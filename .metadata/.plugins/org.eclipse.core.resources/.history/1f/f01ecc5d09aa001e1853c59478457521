package com.micro.AdministratorService.controller;



import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.micro.AdministratorService.model.Administrator;
import com.micro.AdministratorService.service.AdministratorService;

@RestController
@RequestMapping("/api/admin")
public class AdministratorController {

    private final AdministratorService administratorService;

    @Autowired
    public AdministratorController(AdministratorService administratorService) {
        this.administratorService = administratorService;
    }

    @GetMapping
    public List<Administrator> getAllAdministrators() {
        return administratorService.getAllAdministrators();
    }

    @GetMapping("/{adminID}")
    public ResponseEntity<Administrator> getAdministratorById(@PathVariable Long adminID) {
        Administrator administrator = administratorService.getAdministratorById(adminID);
        return ResponseEntity.ok(administrator);
    }

    @PostMapping("/create")
    public ResponseEntity<Administrator> createAdministrator(@RequestBody Administrator administrator) {
        Administrator createdAdministrator = administratorService.createAdministrator(administrator);
        return new ResponseEntity<>(createdAdministrator, HttpStatus.CREATED);
    }

    @PutMapping("/{adminID}")
    public ResponseEntity<Administrator> updateAdministrator(
            @PathVariable Long adminID,
            @RequestBody Administrator updatedAdministrator
    ) {
        Administrator administrator = administratorService.updateAdministrator(adminID, updatedAdministrator);
        return ResponseEntity.ok(administrator);
    }

    @DeleteMapping("/{adminID}")
    public ResponseEntity<Void> deleteAdministrator(@PathVariable Long adminID) {
        administratorService.deleteAdministrator(adminID);
        return ResponseEntity.noContent().build();
    }
}
